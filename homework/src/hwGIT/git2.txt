1)
Отказаться от изменений в рабочем каталоге:
git checkout -- <file>: Отменяет изменения в рабочем каталоге для указанного файла,
возвращая его к состоянию последнего коммита.

2)
Вернуть файл из индекса в рабочий каталог:
git reset HEAD <file>: Убирает файл из индекса, но оставляет изменения в рабочем каталоге.
После этого можно использовать git checkout -- <file> для отмены изменений в рабочем каталоге.

3)
Отменить ошибочный commit:

git reset --soft HEAD^: Отменяет последний коммит, но сохраняет изменения в рабочем каталоге.
git reset --mixed HEAD^: Отменяет последний коммит и убирает его изменения из индекса.
git reset --hard HEAD^: Полностью отменяет последний коммит и удаляет его изменения из индекса и
рабочего каталога.

4)
Исправить коммит на сервере GitHub:
git commit --amend: Позволяет внести изменения в последний коммит. Это создает новый коммит,
заменяя предыдущий. После этого нужно использовать git push --force, но будьте осторожны с этой командой,
так как она изменяет историю.

5)
Создать новую ветку и переключиться в нее:
git branch <название ветки>: Создает новую ветку.
git checkout <название ветки>: Переключает вас на созданную ветку.
Или комбинированный вариант: git checkout -b <название ветки>: Создает новую ветку и сразу переключает в нее.