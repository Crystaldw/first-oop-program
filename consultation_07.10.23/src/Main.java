import java.util.Random;

public class Main {
    /*
    Переменные a, b, res нужны только в одном месте, поэтому делать их глобальными плохая идея мы зря израсходуем память
    Переменная Random нужна нам в разных частях программы поэтому ее следует делать глобальной чтобы ее не создавать несеолько раз
     */
    static int a, b, res;  //Плохой пример - создаем 2 переменные, которые будем скммировать и переменную res для записи в них результат
    static Random random = new Random(); //Хороший пример - создаем глобальную переменную, которая может быть нужна в разных частях программы

    public static void main(String[] args) { // Точка входа
        System.out.println("Начало программы");
        print(); // метод который выводит на консоль слово МЕТОД. В этой точке мы передаем управление в метод print
        System.out.println("Управление вернулось в точку вызова");
        /*
        Задача 1
        Реализовать метод для сумирования 2 чисел типа int
         */

        int s = sum(2, 5); //Передаю управление в метод и ожидаю от него результат работы и запоминаем его в переменную s
        //Создаем массивы и выводим их на консоль при помощи процедуры
        int[] arr = {1, 2, 3};
        arrayOut(arr);
        int[] arr2 = {1, 2, 3, 4, 5, 6, 7, 8, 9,};
        arrayOut(arr2);
        /*
        Задача 2
        Создать метод который будет генерировать массив случайных чисел с заданным колличеством элементов и в заданном диапазоне
         */

        int[] arr3 = createArray(15, 30); // Получаю в переменную arr3 ммассив из метода createArray
        arrayOut(arr3);  //При помощи процедуры arrayOut выводим на консоль сгенерированный массив

        /*
        Задача 3
        Игра в кости - Реализовать метод для генерации числа от 1 до 6(значение игрального кубика)
         */
        int result = game();
        System.out.println("Game");
        System.out.println("Результат: " + result);
        //TODO Изменить метод game(), чтобы он возвращал число в заданном диапазоне
        //TODO Сделать ещё один метод который будет возвращать результат бросания двух кубиков (подсказка - используйте массив)
        //TODO Реализовать программу которая будет в бесконечном цикле работать как калькулятор
    }

    private static int game() {
        return random.nextInt(6)+1;  //Снова обращаемся к глобальной переменной random, в функции генерируем значение от 0 до 5 и прибавляеем 1, чтобы получить нужный диапазон

    }

    private static int[] createArray(int count, int diap) {
        int[] arr = new int[count]; //создаем массив заданной длины
        for (int i = 0; i < arr.length; i++) {  //перебираем элементы массива
            arr[i] = random.nextInt(diap);      //записываем в каждый элемент случайное число при помощи глобальной переменной random и генерируем случайное число в заданном диапазоне
        }
        return arr;  // Возвращаем массив в точку вызова
    }

    private static void arrayOut(int[] arr) {
        System.out.println("Массив:");
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    /**
     * Метод - хорошее решение задачи 1
     *
     * @param a первый параметр
     * @param b второй параметр
     * @return результат сложения
     */
    private static int sum(int a, int b) {
        return a + b;                             //Кроме возвращения управления , возвращаем результат
    }

    /**
     * Метод - плохого решения задачи 1
     */
    private static void badSum() {
        res = a + b;
    }

    /**
     * Метод для вывода текста на консоль
     */
    private static void print() {       //Управление перешло сюда  после вызова метода на 6 строке print()
        System.out.println("Мы получили управление и выводим слово: МЕТОД");
    }
}